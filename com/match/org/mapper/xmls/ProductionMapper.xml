<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.org.mapper.ProductionMapper">
  <resultMap id="BaseResultMap" type="com.match.org.model.Production">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
    <result column="enterpriseid" jdbcType="BIGINT" property="enterpriseid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="abstraction" jdbcType="VARCHAR" property="abstraction" />
    <result column="views" jdbcType="BIGINT" property="views" />
    <result column="published" jdbcType="INTEGER" property="published" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.match.org.model.Production">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, creator, modifier, ctime, mtime, enterpriseid, title, abstraction, views, published
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from production
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from production
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.match.org.model.Production">
    insert into production (id, creator, modifier, 
      ctime, mtime, enterpriseid, 
      title, abstraction, views, 
      published, content)
    values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{modifier,jdbcType=BIGINT}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{enterpriseid,jdbcType=BIGINT}, 
      #{title,jdbcType=VARCHAR}, #{abstraction,jdbcType=VARCHAR}, #{views,jdbcType=BIGINT}, 
      #{published,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.match.org.model.Production">
    insert into production
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="enterpriseid != null">
        enterpriseid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="abstraction != null">
        abstraction,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseid != null">
        #{enterpriseid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="abstraction != null">
        #{abstraction,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        #{views,jdbcType=BIGINT},
      </if>
      <if test="published != null">
        #{published,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.match.org.model.Production">
    update production
    <set>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseid != null">
        enterpriseid = #{enterpriseid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="abstraction != null">
        abstraction = #{abstraction,jdbcType=VARCHAR},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=BIGINT},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.match.org.model.Production">
    update production
    set creator = #{creator,jdbcType=BIGINT},
      modifier = #{modifier,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      enterpriseid = #{enterpriseid,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      abstraction = #{abstraction,jdbcType=VARCHAR},
      views = #{views,jdbcType=BIGINT},
      published = #{published,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.match.org.model.Production">
    update production
    set creator = #{creator,jdbcType=BIGINT},
      modifier = #{modifier,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      enterpriseid = #{enterpriseid,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      abstraction = #{abstraction,jdbcType=VARCHAR},
      views = #{views,jdbcType=BIGINT},
      published = #{published,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
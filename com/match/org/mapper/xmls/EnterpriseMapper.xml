<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.org.mapper.EnterpriseMapper">
	<resultMap id="BaseResultMap"
		type="com.match.org.model.Enterprise">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="creator" jdbcType="BIGINT" property="creator" />
		<result column="modifier" jdbcType="BIGINT" property="modifier" />
		<result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
		<result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="people" jdbcType="VARCHAR" property="people" />
		<result column="contactor" jdbcType="VARCHAR"
			property="contactor" />
		<result column="province" jdbcType="VARCHAR"
			property="province" />
		<result column="city" jdbcType="VARCHAR" property="city" />
		<result column="ucNo" jdbcType="VARCHAR" property="ucno" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="division" jdbcType="BIGINT" property="division" />
	</resultMap>
	<sql id="Base_Column_List">
		id, creator, modifier, ctime, mtime, name, address, people,
		contactor,
		province,
		city, ucNo, major
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from enterprise
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		enterprise
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.match.org.model.Enterprise">
		insert into enterprise (id, creator, modifier,
		ctime,
		mtime, name,
		address, people, contactor,
		province, city, ucNo,
		major)
		values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT},
		#{modifier,jdbcType=BIGINT},
		#{ctime,jdbcType=TIMESTAMP},
		#{mtime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{people,jdbcType=VARCHAR},
		#{contactor,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR}, #{ucno,jdbcType=VARCHAR},
		#{major})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.match.org.model.Enterprise">
		insert into enterprise
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="modifier != null">
				modifier,
			</if>
			<if test="ctime != null">
				ctime,
			</if>
			<if test="mtime != null">
				mtime,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="people != null">
				people,
			</if>
			<if test="contactor != null">
				contactor,
			</if>
			<if test="province != null">
				province,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="ucno != null">
				ucNo,
			</if>
			<if test="major != null">
				major,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="publicaddresspath != null">
				publicaddresspath,
			</if>
			<if test="answeringquestionpath != null">
				answeringquestionpath,
			</if>
			<if test="enterprisephoto != null">
				enterprisephoto,
			</if>
			<if test="enqq != null">
				enqq,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				#{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="people != null">
				#{people,jdbcType=VARCHAR},
			</if>
			<if test="contactor != null">
				#{contactor,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="ucno != null">
				#{ucno,jdbcType=VARCHAR},
			</if>
			<if test="major != null">
				#{major},
			</if>
			<if test="content != null">
				#{content},
			</if>
			<if test="publicaddresspath != null">
				#{publicaddresspath},
			</if>
			<if test="answeringquestionpath != null">
				#{answeringquestionpath},
			</if>
			<if test="enterprisephoto != null">
				#{enterprisephoto},
			</if>
			<if test="enqq != null">
				#{enqq},
			</if>

		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.match.org.model.Enterprise">
		update enterprise
		<set>
			<if test="creator != null">
				creator = #{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				modifier = #{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				ctime = #{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				mtime = #{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="people != null">
				people = #{people,jdbcType=VARCHAR},
			</if>
			<if test="contactor != null">
				contactor = #{contactor,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="ucno != null">
				ucNo = #{ucno,jdbcType=VARCHAR},
			</if>
			<if test="major != null">
				major = #{major},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			
			<if test="publicaddresspath != null">
				publicaddresspath = #{publicaddresspath},
			</if>
			<if test="answeringquestionpath != null">
				answeringquestionpath = #{answeringquestionpath},
			</if>
			<if test="enqq != null">
				enqq = #{enqq},
			</if>
			<if test="enterprisephoto != null">
				enterprisephoto = #{enterprisephoto},
			</if>
			

		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.match.org.model.Enterprise">
		update enterprise
		set creator =
		#{creator,jdbcType=BIGINT},
		modifier = #{modifier,jdbcType=BIGINT},
		ctime = #{ctime,jdbcType=TIMESTAMP},
		mtime =
		#{mtime,jdbcType=TIMESTAMP},
		name = #{name,jdbcType=VARCHAR},
		address =
		#{address,jdbcType=VARCHAR},
		people = #{people,jdbcType=VARCHAR},
		contactor = #{contactor,jdbcType=VARCHAR},
		province =
		#{province,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		ucNo =
		#{ucno,jdbcType=VARCHAR},
		major = #{type},
		where id =
		#{id,jdbcType=BIGINT}
	</update>

	<select id="findEnterprisePage" parameterType="Map"
		resultType="Map">
		select
		a.id,a.name,a.address,a.people,a.province,a.city,a.major,b.realName,b.phone
		from enterprise a left join User b on a.id=b.enterpriseid where
		worker=1 and b.type=1
			<if test="name != null and name != ''">
				and a.name like '%${name}%'
			</if>

		order by a.ctime
		limit ${page},#{pagesize}
	</select>

	<select id="findEnterpriseById" parameterType="java.lang.Long"
		resultType="Map">
		select
		a.id,a.name,a.address,a.people,a.province,a.city,a.major,b.realName,b.phone,b.id as userid
		from enterprise a left join User b on a.id=b.enterpriseid where
		worker=1 and a.id=#{id}
	</select>

	<select id="count"
		parameterType="com.match.org.model.Enterprise" resultType="Integer">
		select count(*) from college a left join User b on a.id=b.enterpriseid
		where worker=1
			<if test="name != null and name != ''">
				and name like '%${name}%'
			</if>
	</select>

	<select id="findDivisionToCompany" parameterType="Map"
		resultType="Map">
		select a.`id` AS themeid,
		b.`id` AS enid,
		a.`title`,
		a.`type`,
		b.`name`,
		DATE_FORMAT(a.`etime`,
		'%Y-%m-%d %H:%i:%S') AS endtime,
		DATE_FORMAT(a.`stime`, '%Y-%m-%d
		%H:%i:%S') AS starttime,d.`name` AS
		typename
		FROM
		theme a
		LEFT JOIN `enterprise` b
		ON a.`competitionid` =
		b.`id`
		LEFT JOIN ThemeType c ON a.id=c.`themeid`
		LEFT JOIN
		PropositionType d ON c.`ptcode`=d.`code`
		WHERE a.`competitionid`=
		#{competitionid} AND a.`divisionid`= #{id}
		<if test="name!=null and name!=''">
			and b.name like '%${name}%'
		</if>
		order by a.ctime
		limit ${page},#{pagesize}
	</select>

	<select id="countfindDivisionToCompany" parameterType="Map"
		resultType="Integer">
		select count(*)
		FROM
		theme a
		LEFT JOIN `enterprise` b
		ON a.`competitionid`
		= b.`id`
		LEFT JOIN ThemeType c ON a.id=c.`themeid`
		LEFT JOIN
		PropositionType d ON c.`ptcode`=d.`code`
		WHERE a.`competitionid`=
		#{competitionid} AND a.`divisionid`= #{id}
		<if test="name!=null and name!=''">
			and b.name like '%${name}%'
		</if>
	</select>

	<select id="findEnterpriseToTheme" parameterType="java.lang.Long"
		resultType="Map">
		SELECT
		a.abstraction,
		a.limitPeople,
		DATE_FORMAT(a.`stime`, '%Y-%m-%d %H:%i:%S') AS stime,
		DATE_FORMAT(a.`etime`, '%Y-%m-%d %H:%i:%S') AS etme,
		DATE_FORMAT(a.`singupsttime`, '%Y-%m-%d %H:%i:%S') AS singupsttime,
		DATE_FORMAT(a.`singupendtime`, '%Y-%m-%d %H:%i:%S') AS singupendtime,
		DATE_FORMAT(a.`ctime`, '%Y-%m-%d %H:%i:%S') AS ctime,
		b.name,
		a.`title`,
		b.province,
		a.id AS themeid,b.`id` AS enid

		FROM
		theme a
		LEFT JOIN `enterprise` b
		ON a.`enterpriseid` = b.`id`
		LEFT JOIN ThemeType c ON a.id=c.`themeid`
		LEFT JOIN PropositionType d ON c.`ptcode`= d.`code`
		where a.id = #{themeid}
	</select>
	
	<select id="findEnterpriseJoinComThemeWork" parameterType="Map"  resultType="Map">
		SELECT a.title,a.id,b.`picspath` FROM ThemeWork a LEFT JOIN themesignup b ON a.`themesignupid`=b.`id` WHERE enterpriseid=#{divisionid} AND a.competitionid=#{id}
		order by a.ctime
		limit ${page},#{pagesize}
	</select>
</mapper>
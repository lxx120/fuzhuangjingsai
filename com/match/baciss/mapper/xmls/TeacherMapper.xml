<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.baciss.mapper.TeacherMapper">
	<resultMap id="BaseResultMap"
		type="com.match.baciss.model.Teacher">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="creator" jdbcType="BIGINT" property="creator" />
		<result column="modifier" jdbcType="BIGINT" property="modifier" />
		<result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
		<result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
		<result column="userid" jdbcType="BIGINT" property="userid" />
		<result column="provice" jdbcType="BIGINT" property="provice" />
		<result column="city" jdbcType="VARCHAR" property="city" />
		<result column="college" jdbcType="BIGINT" property="college" />
		<result column="department" jdbcType="BIGINT"
			property="department" />
		<result column="major" jdbcType="BIGINT" property="major" />
		<result column="inDate" jdbcType="VARCHAR" property="indate" />
		<result column="workDepart" jdbcType="TIMESTAMP"
			property="workdepart" />
		<result column="position" jdbcType="VARCHAR"
			property="position" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="skilled" jdbcType="VARCHAR" property="skilled" />
		<result column="courses" jdbcType="VARCHAR" property="courses" />
		<result column="photo" jdbcType="VARCHAR" property="photo" />
		<result column="scores" jdbcType="INTEGER" property="scores" />
	</resultMap>
	<sql id="Base_Column_List">
		id, creator, modifier, ctime, mtime, userid, provice, city,
		college,
		department,
		major, inDate, workDepart, position, title,
		skilled, courses, photo, scores
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from teacher
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		teacher
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.match.baciss.model.Teacher">
		insert into teacher (id, creator, modifier,
		ctime, mtime,
		userid,
		provice, city, college,
		department, major, inDate,
		workDepart,
		position, title,
		skilled, courses, photo,
		scores)
		values
		(#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT},
		#{modifier,jdbcType=BIGINT},
		#{ctime,jdbcType=TIMESTAMP},
		#{mtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=BIGINT},
		#{provice,jdbcType=BIGINT}, #{city,jdbcType=VARCHAR},
		#{college,jdbcType=BIGINT},
		#{department,jdbcType=BIGINT},
		#{major,jdbcType=BIGINT}, #{indate,jdbcType=VARCHAR},
		#{workdepart,jdbcType=TIMESTAMP}, #{position,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{skilled,jdbcType=VARCHAR},
		#{courses,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR},
		#{scores,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.match.baciss.model.Teacher">
		insert into teacher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="modifier != null">
				modifier,
			</if>
			<if test="ctime != null">
				ctime,
			</if>
			<if test="mtime != null">
				mtime,
			</if>
			<if test="userid != null">
				userid,
			</if>
			<if test="provice != null">
				provice,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="college != null">
				college,
			</if>
			<if test="department != null">
				department,
			</if>
			<if test="major != null">
				major,
			</if>
			<if test="indate != null">
				inDate,
			</if>
			<if test="workdepart != null">
				workDepart,
			</if>
			<if test="position != null">
				position,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="skilled != null">
				skilled,
			</if>
			<if test="courses != null">
				courses,
			</if>
			<if test="photo != null">
				photo,
			</if>
			<if test="scores != null">
				scores,
			</if>
			<if test="education != null">
				education,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				#{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=BIGINT},
			</if>
			<if test="provice != null">
				#{provice,jdbcType=BIGINT},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="college != null">
				#{college,jdbcType=BIGINT},
			</if>
			<if test="department != null">
				#{department,jdbcType=BIGINT},
			</if>
			<if test="major != null">
				#{major,jdbcType=BIGINT},
			</if>
			<if test="indate != null">
				#{indate,jdbcType=VARCHAR},
			</if>
			<if test="workdepart != null">
				#{workdepart,jdbcType=TIMESTAMP},
			</if>
			<if test="position != null">
				#{position,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="skilled != null">
				#{skilled,jdbcType=VARCHAR},
			</if>
			<if test="courses != null">
				#{courses,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				#{photo,jdbcType=VARCHAR},
			</if>
			<if test="scores != null">
				#{scores,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				#{education,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.match.baciss.model.Teacher">
		update teacher
		<set>
			<if test="creator != null">
				creator = #{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				modifier = #{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				ctime = #{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				mtime = #{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="userid != null">
				userid = #{userid,jdbcType=BIGINT},
			</if>
			<if test="provice != null">
				provice = #{provice,jdbcType=BIGINT},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="college != null">
				college = #{college,jdbcType=BIGINT},
			</if>
			<if test="department != null">
				department = #{department,jdbcType=BIGINT},
			</if>
			<if test="major != null">
				major = #{major,jdbcType=BIGINT},
			</if>
			<if test="indate != null">
				inDate = #{indate,jdbcType=VARCHAR},
			</if>
			<if test="workdepart != null">
				workDepart = #{workdepart,jdbcType=TIMESTAMP},
			</if>
			<if test="position != null">
				position = #{position,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="skilled != null">
				skilled = #{skilled,jdbcType=VARCHAR},
			</if>
			<if test="courses != null">
				courses = #{courses,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				photo = #{photo,jdbcType=VARCHAR},
			</if>
			<if test="scores != null">
				scores = #{scores,jdbcType=VARCHAR},
			</if>
			<if test="education != null">
				education = #{education,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.match.baciss.model.Teacher">
		update teacher
		set creator = #{creator,jdbcType=BIGINT},
		modifier = #{modifier,jdbcType=BIGINT},
		ctime =
		#{ctime,jdbcType=TIMESTAMP},
		mtime = #{mtime,jdbcType=TIMESTAMP},
		userid = #{userid,jdbcType=BIGINT},
		provice =
		#{provice,jdbcType=BIGINT},
		city = #{city,jdbcType=VARCHAR},
		college =
		#{college,jdbcType=BIGINT},
		department = #{department,jdbcType=BIGINT},
		major = #{major,jdbcType=BIGINT},
		inDate = #{indate,jdbcType=VARCHAR},
		workDepart = #{workdepart,jdbcType=TIMESTAMP},
		position =
		#{position,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		skilled = #{skilled,jdbcType=VARCHAR},
		courses =
		#{courses,jdbcType=VARCHAR},
		photo = #{photo,jdbcType=VARCHAR},
		scores =
		#{scores,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<select id="findAllTeacher" parameterType="Map" resultType="Map">
		SELECT
		b.`realName`,
		b.`phone`,
		a.`position`,
		d.`dename`,
		c.`name` AS
		collegename,
		a.`id`
		FROM
		teacher a
		LEFT JOIN USER b
		ON a.`userid` = b.`id`
		LEFT JOIN college c
		ON a.`college` = c.`id`
		LEFT JOIN `department` d
		ON
		a.`department` = d.`id`
		where 1=1
		<if test="name!=null and name!='' ">
			and b.`realName` like '%${name}%'
		</if>
		<if test="phone!=null and phone!=''">
			and b.phone=#{phone}
		</if>
		<if test="collegeid!=null and collegeid!=''">
			and c.id = #{collegeid}
		</if>
		<if test="departmentid!=null and departmentid!=''">
			and d.id = #{departmentid}
		</if>
		order by a.ctime
		limit ${page},#{pagesize}
	</select>

	<select id="countfindAllTeacher" resultType="Integer">
		SELECT
		count(*)
		FROM
		teacher a
		LEFT JOIN USER b
		ON a.`userid` = b.`id`
		LEFT
		JOIN college c
		ON a.`college` = c.`id`
		LEFT JOIN `department` d
		ON
		a.`department` = d.`id`
		where 1=1
		<if test="name!=null and name!='' ">
			and b.`realName` like '%${name}%'
		</if>
		<if test="phone!=null and phone!=''">
			and b.phone=#{phone}
		</if>
		<if test="collegeid!=null and collegeid!=''">
			and c.id = #{collegeid}
		</if>
		<if test="departmentid!=null and departmentid!=''">
			and d.id = #{departmentid}
		</if>
	</select>

	<select id="findTeacherScoreList" resultType="Map">
		SELECT
		b.`stitle`,
		c.`name` AS typename,
		b.`realname`,
		b.`teacher`,
		a.`ctime`,
		d.`score`,d.`name` AS prizename,a.`id` AS themeworkid,a.`themesignupid`
		FROM
		themework a
		LEFT JOIN themesignup b
		ON a.`themesignupid` = b.`id`
		LEFT JOIN `propositiontype` c
		ON b.`workType` = c.`code`
		LEFT JOIN `competitionaprize` d
		ON a.`finalAprizeid` = d.`id`
		WHERE a.`competitionid`= #{competitionid} AND b.`teacherphone`=#{phone}
		<if test="prizeid!=0">
		and a.`finalAprizeid`=#{prizeid}
		</if>
		order by a.ctime
		limit ${page},#{pagesize}
	</select>
	
	<select id="countfindTeacherScoreList" resultType="Integer">
		SELECT
		count(*)
		FROM
		themework a
		LEFT JOIN themesignup b
		ON a.`themesignupid` = b.`id`
		LEFT JOIN `propositiontype` c
		ON b.`workType` = c.`code`
		LEFT JOIN `competitionaprize` d
		ON a.`finalAprizeid` = d.`id`
		WHERE a.`competitionid`= #{competitionid} AND b.`teacherphone`=#{phone}
		<if test="prizeid!=0">
		and a.`finalAprizeid`=#{prizeid}
		</if>
	</select>
</mapper>
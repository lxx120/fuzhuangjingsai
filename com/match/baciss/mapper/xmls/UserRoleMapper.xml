<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.baciss.mapper.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.match.baciss.model.UserRole">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="roleid" jdbcType="BIGINT" property="roleid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, creator, modifier, ctime, mtime, userid, roleid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userrole
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from userrole
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.match.baciss.model.UserRole">
    insert into userrole (id, creator, modifier, 
      ctime, mtime, userid, 
      roleid)
    values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{modifier,jdbcType=BIGINT}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{userid,jdbcType=BIGINT}, 
      #{roleid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.match.baciss.model.UserRole">
    insert into userrole
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="roleid != null">
        roleid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.match.baciss.model.UserRole">
    update userrole
    <set>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="roleid != null">
        roleid = #{roleid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.match.baciss.model.UserRole">
    update userrole
    set creator = #{creator,jdbcType=BIGINT},
      modifier = #{modifier,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=BIGINT},
      roleid = #{roleid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateRoleUserByUserid" parameterType="com.match.baciss.model.UserRole">
    update userrole
    set 
      roleid = #{roleid,jdbcType=BIGINT}
    where userid = #{userid,jdbcType=BIGINT}
  </update>
</mapper>
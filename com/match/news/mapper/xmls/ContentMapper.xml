<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.news.mapper.ContentMapper">
  <resultMap id="BaseResultMap" type="com.match.news.model.Content">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="modifier" jdbcType="BIGINT" property="modifier" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="abstraction" jdbcType="VARCHAR" property="abstraction" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="stime" jdbcType="TIMESTAMP" property="stime" />
    <result column="etime" jdbcType="TIMESTAMP" property="etime" />
    <result column="views" jdbcType="BIGINT" property="views" />
    <result column="categoryid" jdbcType="BIGINT" property="categoryid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.match.news.model.Content">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, creator, modifier, ctime, mtime, title, abstraction, status, stime, etime, views, 
    categoryid
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from content
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from content
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.match.news.model.Content">
    insert into content (id, creator, modifier, 
      ctime, mtime, title, 
      abstraction, status, stime, 
      etime, views, categoryid, 
      content)
    values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT}, #{modifier,jdbcType=BIGINT}, 
      #{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR}, 
      #{abstraction,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{stime,jdbcType=TIMESTAMP}, 
      #{etime,jdbcType=TIMESTAMP}, #{views,jdbcType=BIGINT}, #{categoryid,jdbcType=BIGINT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.match.news.model.Content">
    insert into content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="mtime != null">
        mtime,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="abstraction != null">
        abstraction,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="stime != null">
        stime,
      </if>
      <if test="etime != null">
        etime,
      </if>
      <if test="views != null">
        views,
      </if>
      <if test="categoryid != null">
        categoryid,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="abstraction != null">
        #{abstraction,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="stime != null">
        #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="etime != null">
        #{etime,jdbcType=TIMESTAMP},
      </if>
      <if test="views != null">
        #{views,jdbcType=BIGINT},
      </if>
      <if test="categoryid != null">
        #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.match.news.model.Content">
    update content
    <set>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=BIGINT},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="mtime != null">
        mtime = #{mtime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="abstraction != null">
        abstraction = #{abstraction,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="stime != null">
        stime = #{stime,jdbcType=TIMESTAMP},
      </if>
      <if test="etime != null">
        etime = #{etime,jdbcType=TIMESTAMP},
      </if>
      <if test="views != null">
        views = #{views,jdbcType=BIGINT},
      </if>
      <if test="categoryid != null">
        categoryid = #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.match.news.model.Content">
    update content
    set creator = #{creator,jdbcType=BIGINT},
      modifier = #{modifier,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      abstraction = #{abstraction,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      stime = #{stime,jdbcType=TIMESTAMP},
      etime = #{etime,jdbcType=TIMESTAMP},
      views = #{views,jdbcType=BIGINT},
      categoryid = #{categoryid,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.match.news.model.Content">
    update content
    set creator = #{creator,jdbcType=BIGINT},
      modifier = #{modifier,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      mtime = #{mtime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      abstraction = #{abstraction,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      stime = #{stime,jdbcType=TIMESTAMP},
      etime = #{etime,jdbcType=TIMESTAMP},
      views = #{views,jdbcType=BIGINT},
      categoryid = #{categoryid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findContentPage" parameterType="Map" resultType="Map">
		select a.id,title,DATE_FORMAT(stime,'%Y-%m-%d') as stime,DATE_FORMAT(etime,'%Y-%m-%d') as etime,DATE_FORMAT(a.ctime,'%Y-%m-%d') as ctime,status,caname from Content a left join Category b on a.categoryid=b.id
		<where> 
			<if test="title != null and title != ''">
				 title like '%${title}%'
			</if>
		</where> 
		order by a.ctime
        limit ${page},#{pagesize}	
	</select>
	
	<select id="count"  parameterType="com.match.baciss.model.User" resultType="Integer">
	  select  count(*)  from Content
	  <where>
	  	<if test="title!=null and title!=''">
	  		title like '%${title}%'
	  	</if>
	  </where>
	</select>
	
	<select id="findContentByID" parameterType="Map"  resultType="Map">
		select b.id as caid,a.id,title,abstraction,content,DATE_FORMAT(a.ctime,'%Y-%m-%d') as ctime,views,caname from content a left join category b on a.categoryid=b.id where a.id=#{id}
	</select>
	
	<select id="findMaxViewsById" parameterType="java.lang.Long"  resultType="Map">
		select max(views) as views from content where id=#{id}
	</select>
	
	  <select id="findContentPageWeb" parameterType="Map" resultType="Map">
		select a.id,title,DATE_FORMAT(a.ctime,'%Y-%m-%d %H:%i:%s') as ctime,caname,abstraction from Content a left join Category b on a.categoryid=b.id
		order by a.ctime desc
        limit ${page},#{pagesize}	
	</select>
	
	<select id="countWeb"  resultType="Integer">
	  select  count(*)  from Content
	</select>
</mapper>
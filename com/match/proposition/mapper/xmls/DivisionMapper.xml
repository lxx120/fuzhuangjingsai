<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.proposition.mapper.DivisionMapper">
	<resultMap id="BaseResultMap"
		type="com.match.proposition.model.Division">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="creator" jdbcType="BIGINT" property="creator" />
		<result column="modifier" jdbcType="BIGINT" property="modifier" />
		<result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
		<result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="competitionid" jdbcType="BIGINT"
			property="competitionid" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.match.proposition.model.Division">
		<result column="note" jdbcType="LONGVARCHAR" property="note" />
	</resultMap>
	<sql id="Base_Column_List">
		id, creator, modifier, ctime, mtime, name, phone, code, competitionid
	</sql>
	<sql id="Blob_Column_List">
		note
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from division
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from division
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.match.proposition.model.Division">
		insert into division (id, creator, modifier,
		ctime, mtime, name,
		phone, code, competitionid,
		note)
		values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT},
		#{modifier,jdbcType=BIGINT},
		#{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		#{competitionid,jdbcType=BIGINT},
		#{note,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.match.proposition.model.Division">
		insert into division
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="modifier != null">
				modifier,
			</if>
			<if test="ctime != null">
				ctime,
			</if>
			<if test="mtime != null">
				mtime,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="code != null">
				code,
			</if>
			<if test="competitionid != null">
				competitionid,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="ditype != null">
				ditype,
			</if>
			<if test="promotionnum != null">
				promotionnum,
			</if>
			<if test="contator != null">
				contator,
			</if>
			<if test="userid != null">
				userid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				#{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				#{code,jdbcType=VARCHAR},
			</if>
			<if test="competitionid != null">
				#{competitionid,jdbcType=BIGINT},
			</if>
			<if test="note != null">
				#{note,jdbcType=LONGVARCHAR},
			</if>
			<if test="ditype != null">
				#{ditype},
			</if>
			<if test="promotionnum != null">
				#{promotionnum},
			</if>
			<if test="contator != null">
				#{contator},
			</if>
			<if test="userid != null">
				#{userid},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.match.proposition.model.Division">
		update division
		<set>
			<if test="creator != null">
				creator = #{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				modifier = #{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				ctime = #{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				mtime = #{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code,jdbcType=VARCHAR},
			</if>
			<if test="competitionid != null">
				competitionid = #{competitionid,jdbcType=BIGINT},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=LONGVARCHAR},
			</if>
			<if test="ditype != null">
				ditype = #{ditype},
			</if>
			<if test="promotionnum != null">
				promotionnum = #{promotionnum},
			</if>
			<if test="contator != null">
				contator = #{contator},
			</if>
			<if test="userid != null">
				userid = #{userid},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.match.proposition.model.Division">
		update division
		set creator = #{creator,jdbcType=BIGINT},
		modifier = #{modifier,jdbcType=BIGINT},
		ctime = #{ctime,jdbcType=TIMESTAMP},
		mtime = #{mtime,jdbcType=TIMESTAMP},
		name = #{name,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		competitionid = #{competitionid,jdbcType=BIGINT},
		note = #{note,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.match.proposition.model.Division">
		update division
		set creator = #{creator,jdbcType=BIGINT},
		modifier = #{modifier,jdbcType=BIGINT},
		ctime = #{ctime,jdbcType=TIMESTAMP},
		mtime = #{mtime,jdbcType=TIMESTAMP},
		name = #{name,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		code = #{code,jdbcType=VARCHAR},
		competitionid = #{competitionid,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<insert id="insetList">
		insert into division
		(mtime,name,note,phone,competitionid,ditype,promotionnum,contator,userid,code)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.mtime},#{item.name},#{item.note},#{item.phone},#{item.competitionid},#{item.ditype},#{item.promotionnum},#{item.contator},#{item.userid},#{item.code})
		</foreach>
	</insert>

	<select id="findDivisionPage" parameterType="Map"
		resultType="Map">
		select code,id,name,note,contator,phone,ditype,promotionnum from division
		where competitionid=#{comid}
		<if test="name!=null">
			and name like CONCAT('%',#{name},'%')
		</if>
		order by ctime
		limit ${page},#{pagesize}
	</select>
	
	<select id="countfindDivisionPage"  resultType="Integer">
		select count(*) from division
		where competitionid=#{comid}
		<if test="name!=null">
			and name like CONCAT('%',#{name},'%')
		</if>
	</select>
</mapper>
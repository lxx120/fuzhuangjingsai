<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.proposition.mapper.TeachersMapper">
	<!-- <resultMap id="BaseResultMap" type="com.match.baciss.model.Teacher"> 
		<id column="id" jdbcType="BIGINT" property="id" /> <result column="creator" 
		jdbcType="BIGINT" property="creator" /> <result column="modifier" jdbcType="BIGINT" 
		property="modifier" /> <result column="ctime" jdbcType="TIMESTAMP" property="ctime" 
		/> <result column="mtime" jdbcType="TIMESTAMP" property="mtime" /> <result 
		column="userid" jdbcType="BIGINT" property="userid" /> <result column="provice" 
		jdbcType="BIGINT" property="provice" /> <result column="city" jdbcType="VARCHAR" 
		property="city" /> <result column="college" jdbcType="BIGINT" property="college" 
		/> <result column="department" jdbcType="BIGINT" property="department" /> 
		<result column="major" jdbcType="BIGINT" property="major" /> <result column="inDate" 
		jdbcType="VARCHAR" property="indate" /> <result column="workDepart" jdbcType="TIMESTAMP" 
		property="workdepart" /> <result column="position" jdbcType="VARCHAR" property="position" 
		/> <result column="title" jdbcType="VARCHAR" property="title" /> <result 
		column="skilled" jdbcType="VARCHAR" property="skilled" /> <result column="courses" 
		jdbcType="VARCHAR" property="courses" /> <result column="photo" jdbcType="VARCHAR" 
		property="photo" /> <result column="scores" jdbcType="INTEGER" property="scores" 
		/> <result column="introduce" jdbcType="VARCHAR" property="introduce" /> 
		</resultMap> -->


	<select id="count"
		parameterType="com.match.baciss.model.Teacher" resultType="Integer">
		SELECT
		count(*)
		FROM
		`excellentteacher` e
		LEFT JOIN USER b
		ON e.phone = b.phone
		LEFT JOIN
		teacher a ON b.id=a.userid
		LEFT JOIN college c
		ON a.`college` = c.`id`
		LEFT JOIN `department` d
		ON
		a.`department` = d.`id`
	</select>
	<select id="findGoodTeacherPage" resultType="Map">
	SELECT
		b.`realName`,
		b.`phone`,
		a.`position`,
		d.`dename`,
		c.`name`,
		e.`id`,e.`teacherid`,e.`type`,b.`photo`
		FROM
		`excellentteacher` e
		LEFT JOIN USER b
		ON e.phone = b.phone
		LEFT JOIN
		teacher a ON b.id=a.userid
		LEFT JOIN college c
		ON a.`college` = c.`id`
		LEFT JOIN `department` d
		ON
		a.`department` = d.`id`
		LIMIT ${page},#{pagesize}
	</select>

	<select id="findTeacherTeam" parameterType="Map"
		resultType="Map">
		SELECT
		z.dename,d.twcode,
		b.`name`,
		c.`name` AS competitionname,d.`title`,a.postWorks,e.`name` AS typename,a.`id`
		FROM
		`themesignup` a
		LEFT JOIN team b
		ON a.id = b.`workid`
		AND b.`groupleader` = 1
		LEFT JOIN competition c
		ON a.`competitionid` = c.`id`
		LEFT JOIN `themework` d ON a.id=d.`themesignupid`
		LEFT JOIN `propositiontype` e ON a.`workType`=e.`code`
		 left join student k on a.userid=k.userid left join department z on k.department=z.id
		LEFT JOIN USER f ON a.`teacherphone`=f.`phone` WHERE f.`id`=#{id} AND
		a.`competitionid`=#{competitionid}
		order by a.ctime
		limit ${page},#{pagesize}
	</select>
	
	<select id="countfindTeacherTeam" resultType="Integer">
		SELECT
		count(*)
		FROM
		`themesignup` a
		LEFT JOIN team b
		ON a.id = b.`workid`
		AND b.`groupleader` = 1
		LEFT JOIN competition c
		ON a.`competitionid` = c.`id`
		LEFT JOIN `themework` d ON a.id=d.`themesignupid`
		LEFT JOIN `propositiontype` e ON a.`workType`=e.`code`
		LEFT JOIN USER f ON a.`teacher`=f.`realName` WHERE f.`id`=#{id} AND
		a.`competitionid`=#{competitionid}
	</select>

	<update id="updateTeamBuSign" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update team 
			<set>
				groupleader = #{item.groupleader}
			</set>
			where id=#{item.id}
		</foreach>
	</update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.match.judges.mapper.AssessRoundsMapper">

	<sql id="Base_Column_List">
		id, creator, modifier, ctime, mtime, ahid, type, divisionid,
		competitionid, pre,
		artype
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from assessrounds
		where id = #{id,jdbcType=BIGINT}
	</select>
	<resultMap id="BaseResultMap"
		type="com.match.judges.model.AssessRounds">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="creator" jdbcType="BIGINT" property="creator" />
		<result column="modifier" jdbcType="BIGINT" property="modifier" />
		<result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
		<result column="mtime" jdbcType="TIMESTAMP" property="mtime" />
		<result column="ahid" jdbcType="BIGINT" property="ahid" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="divisionid" jdbcType="BIGINT"
			property="divisionid" />
		<result column="competitionid" jdbcType="BIGINT"
			property="competitionid" />
		<result column="pre" jdbcType="BIGINT" property="pre" />
		<result column="artype" jdbcType="INTEGER" property="artype" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from assessrounds
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.match.judges.model.AssessRounds">
		insert into assessrounds (id, creator, modifier,
		ctime, mtime, ahid,
		type, divisionid, competitionid,
		pre, artype)
		values (#{id,jdbcType=BIGINT}, #{creator,jdbcType=BIGINT},
		#{modifier,jdbcType=BIGINT},
		#{ctime,jdbcType=TIMESTAMP}, #{mtime,jdbcType=TIMESTAMP}, #{ahid,jdbcType=BIGINT},
		#{type,jdbcType=INTEGER}, #{divisionid,jdbcType=BIGINT},
		#{competitionid,jdbcType=BIGINT},
		#{pre,jdbcType=BIGINT}, #{artype,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.match.judges.model.AssessRounds">
		insert into assessrounds
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="modifier != null">
				modifier,
			</if>
			<if test="ctime != null">
				ctime,
			</if>
			<if test="mtime != null">
				mtime,
			</if>
			<if test="ahid != null">
				ahid,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="divisionid != null">
				divisionid,
			</if>
			<if test="competitionid != null">
				competitionid,
			</if>
			<if test="pre != null">
				pre,
			</if>

			<if test="reviewstime != null">
				reviewstime,
			</if>
			<if test="reviewetime != null">
				reviewetime,
			</if>
			<if test="isSchool != null">
				isSchool,
			</if>
			<if test="ischoose != null">
				ischoose,
			</if>
			<if test="level != null">
				level,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="generalcomment != null">
				generalcomment,
			</if>
			<if test="mark !=null">
				mark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				#{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				#{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="ahid != null">
				#{ahid,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="divisionid != null">
				#{divisionid,jdbcType=BIGINT},
			</if>
			<if test="competitionid != null">
				#{competitionid,jdbcType=BIGINT},
			</if>
			<if test="pre != null">
				#{pre,jdbcType=BIGINT},
			</if>

			<if test="reviewstime != null">
				#{reviewstime},
			</if>
			<if test="reviewetime != null">
				#{reviewetime},
			</if>
			<if test="isSchool != null">
				#{isSchool},
			</if>
			<if test="ischoose != null">
				#{ischoose},
			</if>
			<if test="level != null">
				#{level},
			</if>
			<if test="status != null">
				#{status},
			</if>
			<if test="generalcomment != null">
				#{generalcomment},
			</if>
			<if test="mark !=null">
				#{mark},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.match.judges.model.AssessRounds">
		update assessrounds
		<set>
			<if test="creator != null">
				creator = #{creator,jdbcType=BIGINT},
			</if>
			<if test="modifier != null">
				modifier = #{modifier,jdbcType=BIGINT},
			</if>
			<if test="ctime != null">
				ctime = #{ctime,jdbcType=TIMESTAMP},
			</if>
			<if test="mtime != null">
				mtime = #{mtime,jdbcType=TIMESTAMP},
			</if>
			<if test="ahid != null">
				ahid = #{ahid,jdbcType=BIGINT},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="divisionid != null">
				divisionid = #{divisionid,jdbcType=BIGINT},
			</if>
			<if test="competitionid != null">
				competitionid = #{competitionid,jdbcType=BIGINT},
			</if>
			<if test="pre != null">
				pre = #{pre,jdbcType=BIGINT},
			</if>
			<if test="reviewstime != null">
				reviewstime = #{reviewstime},
			</if>
			<if test="reviewetime != null">
				reviewetime = #{reviewetime},
			</if>
			<if test="isSchool != null">
				isSchool = #{isSchool},
			</if>
			<if test="ischoose != null">
				ischoose = #{ischoose},
			</if>
			<if test="level != null">
				level = #{level},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="generalcomment != null">
				generalcomment = #{generalcomment},
			</if>
			<if test="mark !=null">
				mark = #{mark},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.match.judges.model.AssessRounds">
		update assessrounds
		set creator = #{creator,jdbcType=BIGINT},
		modifier = #{modifier,jdbcType=BIGINT},
		ctime = #{ctime,jdbcType=TIMESTAMP},
		mtime = #{mtime,jdbcType=TIMESTAMP},
		ahid = #{ahid,jdbcType=BIGINT},
		type = #{type,jdbcType=INTEGER},
		divisionid = #{divisionid,jdbcType=BIGINT},
		competitionid = #{competitionid,jdbcType=BIGINT},
		pre = #{pre,jdbcType=BIGINT},
		artype = #{artype,jdbcType=INTEGER}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<insert id="insetList">
		insert into assessrounds
		(mtime,ahid,type,divisionid,competitionid,reviewstime,reviewetime,isSchool,ischoose)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.mtime},#{item.ahid},#{item.type},#{item.divisionid},#{item.competitionid},#{item.reviewstime},#{item.reviewetime},#{item.isSchool},#{item.ischoose})
		</foreach>
	</insert>

	<select id="findAssessRounds" resultType="Map">
		SELECT a.mark,a.status,a.level,a.type,a.ischoose,DATE_FORMAT(a.reviewstime,
		'%Y-%m-%d %H:%i:%s') AS reviewstime,DATE_FORMAT(a.reviewetime,
		'%Y-%m-%d %H:%i:%s') AS reviewetime,a.`id`,b.`ahname`,c.`name` AS
		diname ,d.`name` AS comname,a.`divisionid`,a.`competitionid` FROM
		`assessrounds` a LEFT JOIN assesshierarchy b ON a.`ahid`=b.`id` LEFT
		JOIN division c ON a.`divisionid`=c.`id` LEFT JOIN competition d ON
		a.`competitionid`=d.`id` WHERE a.competitionid=#{competitionid} and
		a.divisionid=#{divisionid} order by a.level
	</select>
	<select id="findAssessRoundsById" resultType="Map">
	SELECT a.status,a.level,a.type,a.ischoose,DATE_FORMAT(a.reviewstime,
		'%Y-%m-%d %H:%i:%s') AS reviewstime,DATE_FORMAT(a.reviewetime,
		'%Y-%m-%d %H:%i:%s') AS reviewetime,a.`id`,b.`ahname`,c.`name` AS
		diname ,d.`name` AS comname,a.`divisionid`,a.`competitionid`,a.level,a.mark FROM
		`assessrounds` a LEFT JOIN assesshierarchy b ON a.`ahid`=b.`id` LEFT
		JOIN division c ON a.`divisionid`=c.`id` LEFT JOIN competition d ON
		a.`competitionid`=d.`id` WHERE a.id=#{id}
	</select>

	<update id="updatebatch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" open=""
			close="" separator=";">
			update assessrounds
			<set>
				status=${item.status}
			</set>
			where id = ${item.id}
		</foreach>
	</update>

	<select id="findWorkidByArid" resultType="Map">
		SELECT
		DISTINCT e.`worksID`,k.`workType`
		FROM
		 WorkJudge e
		LEFT JOIN `themework` f ON e.`worksID`=f.`id` LEFT JOIN `themesignup` k ON f.`themesignupid` = k.`id`
		where e.arid = #{id}
	</select>
</mapper>